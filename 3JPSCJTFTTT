-- 增强版奖励追踪脚本 - 专注于上下文信息收集
local Players = game:GetService("Players")
local localPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")

-- 配置
local config = {
    enhancedLogging = true, -- 增强日志记录
    scanRemotesOnStart = true, -- 启动时扫描远程对象
    trackPlayerContext = true -- 追踪玩家上下文
}

-- 存储状态
local playerState = {
    position = Vector3.new(0, 0, 0),
    health = 100,
    character = nil,
    nearbyObjects = {}
}

-- 增强的上下文记录
local function captureEnvironmentContext()
    local context = {}
    
    -- 记录玩家基础信息
    pcall(function()
        if localPlayer.Character then
            local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid")
            local rootPart = localPlayer.Character:FindFirstChild("HumanoidRootPart")
            
            if humanoid then
                playerState.health = humanoid.Health
                context.health = humanoid.Health
            end
            
            if rootPart then
                playerState.position = rootPart.Position
                context.position = {
                    x = math.floor(rootPart.Position.X),
                    y = math.floor(rootPart.Position.Y),
                    z = math.floor(rootPart.Position.Z)
                }
                
                -- 记录附近物体
                local nearby = {}
                for _, obj in ipairs(workspace:GetChildren()) do
                    if obj:IsA("Part") and obj ~= rootPart then
                        local distance = (rootPart.Position - obj.Position).Magnitude
                        if distance < 30 then
                            table.insert(nearby, {
                                name = obj.Name,
                                distance = math.floor(distance)
                            })
                        end
                    end
                end
                context.nearby = nearby
            end
        end
    end)
    
    -- 记录游戏数据
    pcall(function()
        local leaderstats = localPlayer:FindFirstChild("leaderstats")
        if leaderstats then
            context.stats = {}
            for _, stat in ipairs(leaderstats:GetChildren()) do
                if stat:IsA("IntValue") or stat:IsA("NumberValue") then
                    context.stats[stat.Name] = stat.Value
                end
            end
        end
    end)
    
    return context
end

-- 增强的奖励日志记录
local function logEnhancedReward(eventName, method, args)
    local context = captureEnvironmentContext()
    
    print("\n🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁")
    print("🎁 奖励事件触发!")
    print("🎁 事件: " .. eventName .. "." .. method)
    print("🎁 参数: " .. tostring(args and #args or 0) .. " 个参数")
    
    if args then
        for i, arg in ipairs(args) do
            local argType = typeof(arg)
            print("   📌 参数 " .. i .. ": [" .. argType .. "] " .. tostring(arg))
        end
    end
    
    -- 显示环境上下文
    print("🎁 环境上下文:")
    if context.position then
        print("   📍 位置: X=" .. context.position.x .. ", Y=" .. context.position.y .. ", Z=" .. context.position.z)
    end
    
    if context.health then
        print("   ❤️ 生命值: " .. context.health)
    end
    
    if context.stats then
        print("   📊 游戏数据:")
        for statName, value in pairs(context.stats) do
            print("      " .. statName .. ": " .. tostring(value))
        end
    end
    
    if context.nearby and #context.nearby > 0 then
        print("   🏷️ 附近物体:")
        for i, obj in ipairs(context.nearby) do
            if i <= 5 then -- 限制显示数量
                print("      - " .. obj.name .. " (" .. obj.distance .. " 米)")
            end
        end
        if #context.nearby > 5 then
            print("      ... 还有 " .. (#context.nearby - 5) .. " 个物体")
        end
    end
    
    print("🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁\n")
end

-- 主动扫描远程对象
local function scanRemoteObjects()
    print("🔍 开始扫描游戏中的远程对象...")
    
    local remoteLocations = {
        game:GetService("ReplicatedStorage"),
        workspace,
        game:GetService("ServerScriptService"),
        game:GetService("ServerStorage"),
        game:GetService("StarterPlayer"):FindFirstChild("StarterPlayerScripts"),
        game:GetService("StarterPlayer"):FindFirstChild("StarterCharacterScripts"),
        localPlayer:FindFirstChild("PlayerScripts")
    }
    
    local foundEvents = {}
    local foundFunctions = {}
    
    for _, location in ipairs(remoteLocations) do
        if location then
            pcall(function()
                for _, child in ipairs(location:GetDescendants()) do
                    if child:IsA("RemoteEvent") then
                        foundEvents[child.Name] = true
                    elseif child:IsA("RemoteFunction") then
                        foundFunctions[child.Name] = true
                    end
                end
            end)
        end
    end
    
    -- 输出扫描结果
    local eventNames = {}
    for name in pairs(foundEvents) do
        table.insert(eventNames, name)
    end
    
    local functionNames = {}
    for name in pairs(foundFunctions) do
        table.insert(functionNames, name)
    end
    
    table.sort(eventNames)
    table.sort(functionNames)
    
    print("📋 扫描结果:")
    print("   RemoteEvents: " .. #eventNames .. " 个")
    for i, name in ipairs(eventNames) do
        print("   - " .. name)
    end
    
    print("   RemoteFunctions: " .. #functionNames .. " 个")
    for i, name in ipairs(functionNames) do
        print("   - " .. name)
    end
    
    return {
        events = foundEvents,
        functions = foundFunctions
    }
end

-- 设置监控
local function setupMonitoring()
    local scannedRemotes = scanRemoteObjects()
    
    local mt = getrawmetatable(game)
    local oldNamecall = mt.__namecall
    
    setreadonly(mt, false)
    
    mt.__namecall = function(self, ...)
        local method = getnamecallmethod()
        local args = {...}
        
        if method == "FireServer" or method == "InvokeServer" then
            local success, name = pcall(function() return self.Name end)
            
            if success and name then
                -- 记录所有远程调用（或者只记录奖励相关的）
                local isRewardRelated = string.lower(name):find("reward") or 
                                      string.lower(name):find("claim") or
                                      string.lower(name):find("award") or
                                      string.lower(name):find("prize")
                
                if isRewardRelated then
                    logEnhancedReward(name, method, args)
                else
                    -- 可选：记录所有远程调用用于分析
                    -- print("[监控] " .. name .. "." .. method)
                end
            end
        end
        
        return oldNamecall(self, ...)
    end
    
    setreadonly(mt, true)
    
    print("✅ 增强监控已启动!")
    print("💡 正在追踪奖励事件和环境上下文...")
end

-- 启动脚本
if config.scanRemotesOnStart then
    delay(2, function()
        setupMonitoring()
    end)
end

return {
    rescan = scanRemoteObjects,
    getConfig = function() return config end
}